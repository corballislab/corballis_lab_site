setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(track)
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(track$geometry)
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry)
map
track <- st_read("D:\\dataset\\geospatial_data\\DOC_tracks.geojson") %>%
filter(DESCRIPTION %in% c("Waiotahi to Karaka Tramping Track",
"Karaka to Crosbies Hut Tramping Track"))
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addGeoJSON(data = track$geometry)
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addGeoJSON(data = track)
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addGeoJSON(geojson =  track)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, stroke = TRUE)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "black")
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "black", dashArray = "dash")
map
?addPolylines
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "black", dashArray = "stroke")
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "#FFC300",)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "#FFC300") %>%
addProviderTiles(provider = providers$CartoDB.DarkMatter)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "#FFC300") %>%
addProviderTiles(provider = providers$Thunderforest.TransportDark)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "#FFC300") %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 12.5) %>%
addPolylines(data = track$geometry, color = "black") %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 11) %>%
addPolylines(data = track$geometry, color = "black") %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 11) %>%
addPolylines(data = track$geometry, color = "black",opacity = 1) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 11) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 1) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 11) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 1.5) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
setView(lat = -37.043694801717365,
lng = 175.60234014624888,
zoom = 11) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
?fitBounds
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - 5, lng2 = 175.60234014624888 + 5, lat1 = -37.043694801717365 - 5, lat2 = -37.043694801717365 + 5) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - 1, lng2 = 175.60234014624888 + 1, lat1 = -37.043694801717365 - 1, lat2 = -37.043694801717365 + 1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .5, lng2 = 175.60234014624888 + .5, lat1 = -37.043694801717365 - .5, lat2 = -37.043694801717365 + .5) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365 + .1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - 0, lat2 = -37.043694801717365 + .1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .01, lat2 = -37.043694801717365 + .1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .05, lat2 = -37.043694801717365 + .1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .08, lat2 = -37.043694801717365 + .1) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365 + 0) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2.5,
) %>%
addProviderTiles(provider = providers$OpenTopoMap)
map
leaflet::iconList()
awesome <- makeAwesomeIcon(
icon = "tent",
iconColor = "black",
markerColor = "blue",
library = "fa"
)
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2.5,
) %>%
addProviderTiles(provider = providers$OpenTopoMap) %>%
addAwesomeMarkers(icon = awesome)
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2.5,
) %>%
addProviderTiles(provider = providers$OpenTopoMap) %>%
addAwesomeMarkers(icon = awesome, lng = 175.60234014624888, lat = -37.043694801717365)
map
awesome <- makeAwesomeIcon(
icon = "fire",
iconColor = "black",
markerColor = "blue",
library = "fa"
)
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2.5,
) %>%
addProviderTiles(provider = providers$OpenTopoMap) %>%
addAwesomeMarkers(icon = awesome, lng = 175.60234014624888, lat = -37.043694801717365)
map
file_text <- readr::read_file(
paste0(.libPaths()[1],
"/leaflet/htmlwidgets/plugins/Leaflet.awesome-markers/font-awesome.min.css")
)
file_text
map <- leaflet() %>%
addTiles() %>%
fitBounds(lng1 = 175.60234014624888 - .1, lng2 = 175.60234014624888 + .1, lat1 = -37.043694801717365 - .1, lat2 = -37.043694801717365) %>%
addPolylines(data = track$geometry,
color = "black",
opacity = 1,
weight = 2.5,
) %>%
addProviderTiles(provider = providers$OpenTopoMap) %>%
addMarkers(lng = 175.60234014624888, lat = -37.043694801717365)
map
quarto render
studentscsv <- read_csv("students_csv.csv")
library(readr)
library(knitr)
library(quarto)
studentscsv <- read_csv("students_csv.csv")
# Run this and use output in qmd file
#cat(paste0("`r randDispOrd <- sample(nrow(studentscsv)) `\n"))
for (i in 1:nrow(studentscsv)) {
if (i == 1) {cat(paste0("`r randDispOrd <- sample(nrow(studentscsv)) `\n"))
}
# output name and title
cat(paste0("# `r studentscsv$name[randDispOrd[",i,"]] `\n"))
cat(paste0("**`r studentscsv$position[randDispOrd[",i,"]] `**\n\n"))
# output the summary in a grid format
cat(":::: {.grid}\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
} else {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
}
cat(":::\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
} else {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
}
cat(":::\n\n")
cat("::::\n\n")
cat("---\n\n")
}
randDispOrd[ 1 ]
randDispOrd <- sample(nrow(studentscsv))
randDispOrd[ 1 ]
# Run this and use output in qmd file
randDispOrd <- sample(nrow(studentscsv))
for (i in 1:nrow(studentscsv)) {
if (i == 1) {cat(paste0("`r randDispOrd <- sample(nrow(studentscsv)) `\n"))
}
# output name and title
cat(paste0("# `r studentscsv$name[randDispOrd[",i,"]] `\n"))
cat(paste0("**`r studentscsv$position[randDispOrd[",i,"]] `**\n\n"))
# output the summary in a grid format
cat(":::: {.grid}\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
} else {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
}
cat(":::\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
} else {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
}
cat(":::\n\n")
cat("::::\n\n")
cat("---\n\n")
}
randDispOrd
# Run this and use output in qmd file
randDispOrd <- sample(nrow(studentscsv))
for (i in 1:nrow(studentscsv)) {
if (i == 1) {cat(paste0("`r randDispOrd <- sample(nrow(studentscsv)) `\n"))
}
# output name and title
cat(paste0("# `r studentscsv$name[randDispOrd[",i,"]] `\n"))
cat(paste0("**`r studentscsv$position[randDispOrd[",i,"]] `**\n\n"))
# output the summary in a grid format
cat(":::: {.grid}\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
} else {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
}
cat(":::\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
} else {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
}
cat(":::\n\n")
cat("::::\n\n")
cat("---\n\n")
}
randDispOrd
sample(5,5)
sample(
)
sample
show(blah)
set.seed(123)
seed
set.seed(123)
df <- df[sample(nrow(df)),]
studentscsv <- read_csv("students_csv.csv")
library(readr)
library(knitr)
library(quarto)
studentscsv <- read_csv("students_csv.csv")
studentscsv <- studentscsv[sample(nrow(df)),]
studentscsv
View(studentscsv)
studentscsv <- read_csv("students_csv.csv")
studentscsv <- studentscsv[sample(nrow(studentscsv)),]
studentscsv
studentscsv <- studentscsv[sample(nrow(studentscsv)),]
studentscsv
studentscsv <- read_csv("students_csv.csv")
# Run this and use output in qmd file
randDispOrd <- sample(nrow(studentscsv))
for (i in 1:nrow(studentscsv)) {
if (i == 1) {cat(paste0("`r studentscsv <- studentscsv[sample(nrow(studentscsv)),]`\n"))
}
# output name and title
cat(paste0("# `r studentscsv$name[randDispOrd[",i,"]] `\n"))
cat(paste0("**`r studentscsv$position[randDispOrd[",i,"]] `**\n\n"))
# output the summary in a grid format
cat(":::: {.grid}\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
} else {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
}
cat(":::\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
} else {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
}
cat(":::\n\n")
cat("::::\n\n")
cat("---\n\n")
}
studentscsv
studentscsv
studentscsv
library(readr)
library(knitr)
library(quarto)
studentscsv <- read_csv("students_csv.csv")
# Run this and use output in qmd file
studentscsv <- studentscsv[sample(nrow(studentscsv)),]
randDispOrd <- sample(nrow(studentscsv))
for (i in 1:nrow(studentscsv)) {
if (i == 1) {cat(paste0("`r studentscsv <- studentscsv[sample(nrow(studentscsv)),]`\n"))
}
# output name and title
cat(paste0("# `r studentscsv$name[randDispOrd[",i,"]] `\n"))
cat(paste0("**`r studentscsv$position[randDispOrd[",i,"]] `**\n\n"))
# output the summary in a grid format
cat(":::: {.grid}\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-5}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
} else {
cat("::: {.g-col-5}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
}
cat(":::\n\n")
if (i %% 2 == 0) {
cat("::: {.g-col-7}\n")
cat("`r studentscsv$summary[randDispOrd[",i,"]] `", "\n")
} else {
cat("::: {.g-col-7}\n")
cat(paste0("![](images/`r studentscsv$image[randDispOrd[",i,"]] `){width=100% height=auto}\n"))
}
cat(":::\n\n")
cat("::::\n\n")
cat("---\n\n")
}
